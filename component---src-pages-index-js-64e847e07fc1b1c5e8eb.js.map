{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Home","style","color","overflowY","headerText","padding","position","top","height","zIndex","camera","onCreated","gl","shadowMap","enabled","type","THREE","fallback","center","className","children","attach","args","Plane","WelcomeLogo","useState","model","setModel","useEffect","GLTFLoader","load","welcomeStamp","object","scene","rotation","Math","PI","receiveShadow"],"mappings":"sRAWe,SAASA,IACtB,OACE,yBAAKC,MAAO,CAAEC,MAAM,SAAWC,UAAW,WACxC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQC,WAAW,6BACnB,yBAAKH,MAAO,CAAEC,MAAM,SAAWC,UAAW,SAAUE,QAAS,SAA7D,gJACA,yBAAKJ,MAAO,CAAEC,MAAM,SAAWC,UAAW,SAAUE,QAAS,SAA7D,8EACA,kBAAC,IAAD,CACEJ,MAAO,CAACK,SAAU,WAAYC,IAAK,IAAKC,OAAQ,QAASC,OAAQ,MACjEC,OAAS,CAAEJ,SAAS,CAAC,EAAG,EAAG,IAC3BK,UAAW,YAAa,IAAVC,EAAS,EAATA,GACZA,EAAGC,UAAUC,SAAU,EACvBF,EAAGC,UAAUE,KAAOC,qBAGtB,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,CAAKC,QAAM,EAACC,UAAU,UAAUC,SAAS,gBAC3D,yBAAKC,OAAO,MAAMC,KAAM,CAAC,QAAS,GAAI,MACtC,gCAAYhB,SAAU,CAAC,EAAG,EAAG,GAAIJ,MAAM,UACvC,gCAAYI,SAAU,CAAC,EAAG,EAAG,IAAKJ,MAAM,WACxC,gCAAYI,SAAU,CAAC,EAAG,GAAI,IAAKJ,MAAM,UACzC,kBAACqB,EAAD,MACA,kBAACC,EAAD,OAEF,kBAAC,IAAD,QAOR,IAAMA,EAAc,WAAO,IAAD,EACEC,qBAAnBC,EADiB,KACVC,EADU,KAOxB,OAJAC,qBAAU,YACR,IAAIC,KAAaC,KAAKC,IAAcJ,MAG/BD,EAAQ,+BAAWM,OAAQN,EAAMO,QAAY,MAGhDV,EAAQ,kBACZ,0BAAMW,SAAU,EAAEC,KAAKC,GAAG,EAAG,EAAG,GAAI9B,SAAU,CAAC,GAAI,GAAK,GAAI+B,eAAa,GACvE,yCAAqBhB,OAAO,WAAWC,KAAM,CAAC,IAAI,OAClD,0CAAsBD,OAAO,WAAWnB,MAAM","file":"component---src-pages-index-js-64e847e07fc1b1c5e8eb.js","sourcesContent":["import React, { useRef, useState, Suspense, useEffect } from \"react\"\r\nimport { Canvas, Dom, useLoader, useFrame, useThree, extend} from \"react-three-fiber\"\r\nimport * as THREE from 'three'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'\r\nimport { OrbitControls, draco } from 'drei'\r\nimport welcomeStamp from '../assets/models/welcome.glb'\r\n\r\nimport Header from \"../components/header\"\r\nimport TopNav from \"../components/navigation/topnav\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div style={{ color: `purple`, overflowY: 'hidden'}}>\r\n      <TopNav />\r\n      <Header headerText=\"Welcome to my portfolio!\" />\r\n      <div style={{ color: `purple`, overflowY: 'hidden', padding: \"20px\"}}> This version 2 of the portfolio is still in construction. It will be a React/Gatsby App featuring three.js, a 3d graphics API. Stay tuned! </div>\r\n      <div style={{ color: `purple`, overflowY: 'hidden', padding: \"20px\"}}> Left click + drag to rotate. Right click + drag to move. Scroll for zoom.</div>\r\n      <Canvas \r\n        style={{position: 'absolute', top: '0', height: '100vh', zIndex: '-1' }}\r\n        camera= {{ position:[0, 0, 5] }}\r\n        onCreated={({ gl }) => {\r\n          gl.shadowMap.enabled = true\r\n          gl.shadowMap.type = THREE.PCFSoftShadowMap\r\n        }}\r\n      >\r\n        <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\r\n          <fog attach=\"fog\" args={[\"white\", 10, 20]}/>\r\n          <pointLight position={[0, 2, 0]} color=\"white\" />\r\n          <pointLight position={[0, 2, 10]} color=\"silver\" />\r\n          <pointLight position={[0, 2, -10]} color=\"white\" />\r\n          <Plane />\r\n          <WelcomeLogo />\r\n        </Suspense>\r\n        <OrbitControls />\r\n      </Canvas>\r\n    </div>\r\n  )\r\n}\r\n\r\n// https://github.com/react-spring/react-three-fiber/blob/master/examples/src/demos/GltfPlanet.js\r\nconst WelcomeLogo = () => {\r\n  const [model, setModel] = useState();\r\n\r\n  useEffect(() => {\r\n    new GLTFLoader().load(welcomeStamp, setModel);\r\n  })\r\n  //console.log(model);\r\n  return model ? <primitive object={model.scene} /> : null\r\n}\r\n\r\nconst Plane = () => (\r\n  <mesh rotation={[-Math.PI/2, 0, 0]} position={[0, -0.5, 0]} receiveShadow>\r\n    <planeBufferGeometry attach=\"geometry\" args={[100,100]} />\r\n    <meshPhysicalMaterial attach=\"material\" color=\"white\" />\r\n  </mesh>\r\n)\r\n\r\nconst Box = props => {\r\n  // This reference will give us direct access to the mesh so we can animate it\r\n  const mesh = useRef()\r\n\r\n  // Set up state for the hovered and active state\r\n  const [hovered, setHover] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  // Rotate mesh every frame, this is outside of React without overhead\r\n  //useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\r\n\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\r\n      onClick={e => setActive(!active)}\r\n      onPointerOver={e => setHover(true)}\r\n      onPointerOut={e => setHover(false)}\r\n      castShadow\r\n    >\r\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\r\n      <meshPhysicalMaterial\r\n        attach=\"material\"\r\n        color={hovered ? \"hotpink\" : \"orange\"}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n\r\n"],"sourceRoot":""}